************ Interpreter Info: ************

Total runtime info:
==========================================================================================================================
                          Name:     info
--------------------------------------------------------------------------------------------------------------------------
           Interpreter call id:      246
    Interpreter call level/max:        0       11
               Frame max level:        7
                  Frame max id:        8
           Frame free id count:        5
==========================================================================================================================

Optimize info:
==========================================================================================================================
      Name: Status
--------------------------------------------------------------------------------------------------------------------------
       LCO: rebuild=0, arg=0, pass=0, hit=0
==========================================================================================================================

Callable stats info: callId=246, row=26, column=62(4), value-max=4320, value-unit=3^x
==========================================================================================================================
   Frame    RType  Count  Ref Object                         2333333333333333333333333333333333333333333333333333333333345X max=14255, unit=3^x
--------------------------------------------------------------------------------------------------------------------------
    root   factor   4320    0 value-of                                                                                    9
    root   factor   1893    0 print                                                                                       8
    root   factor   1338    0 if                                                                                          8
    root   factor   1071    0 return                                                                                      8
    root   factor   1071    0 equal_def                                                                                   8
  system funcList   1071    1 equal                                                                                       8
    root   factor   1068    0 type-of                                                                                     8
    root   factor    534    0 not                                                                                         7
    root   factor    534    0 name-of                                                                                     7
    root   factor    534    0 attribute-of                                                                                7
    root   factor    275    0 property-of                                                                                 7
    root   factor    267    0 and                                                                                         7
    root   factor    267    0 access                                                                                      7
    root   factor    178    0 add-attribute                    333333333333333333333333333333333333333333332               
    root   factor     73    0 defun                                                                        23331 233333344 
    root   factor      7    0 alias                          23                                                            
    main funcList      6    1 print-list                                                                                  3
    root   factor      6    0 load                                                                                      13 
    root   factor      5    0 make-list                                                                        22          
    root   factor      5    0 defvar                                                                           22          
    root   factor      4    0 defmacro                                                                          22         
    root   factor      4    0 defclass                                                                                   3 
    root   factor      3    0 loop                                                                                        2
    root   factor      3    0 list-of                                                                                     2
    root   factor      3    0 init-loader                                                                                2 
    root   factor      3    0 deftemplate                                                                               2  
==========================================================================================================================

Global frame list: total=0

id=2, name=main, lvl=2, ref=1/8, entry=28, pid=1(system), subject=main
==========================================================================================================================
Name(alias)          : EntryId  FrameId  Ref  Type       Value               
--------------------------------------------------------------------------------------------------------------------------
root                 : 1        2        0    frame      root                
system               : 2        2        0    frame      system              
main                 : 3        2        1    frame      main                
?script-path         : 4        2        1    var        string, "data/rulp_load_tool/test_print_list_3_frame.rulp"
?path                : 5        2        1    var        list, '("load")     
is-empty             : 6        2        1    funcList   {} : frame=null, type=list
                                         2    func       (is-empty list) : frame=system
                                         2    func       (is-empty array) : frame=system
                                         1    func       (is-empty string) : frame=main
                                         1    func       (is-empty type#map) : frame=main
                                         1    func       (is-empty type#queue) : frame=main
                                         1    func       (is-empty type#set) : frame=main
                                         1    func       (is-empty type#stack) : frame=main
is-blank             : 7        2        1    func       (is-blank string) : frame=main
file-prename         : 8        2        1    func       (file-prename string) : frame=main
file-subffix         : 9        2        1    func       (file-subffix string) : frame=main
str-split-line       : 10       2        1    func       (str-split-line string) : frame=main
to-one-line          : 11       2        1    func       (to-one-line list) : frame=main
sort                 : 12       2        1    funcList   {} : frame=null, type=list
                                         1    func       (sort list) : frame=main
                                         1    func       (sort list func) : frame=main
                                         1    func       (sort array) : frame=main
                                         1    func       (sort array func) : frame=main
print-list           : 13       2        1    funcList   {} : frame=null, type=list
                                         1    func       (print-list list) : frame=main
                                         1    func       (print-list nil nil) : frame=main
                                         1    func       (print-list nil) : frame=main
to-valid-path        : 14       2        1    func       (to-valid-path string) : frame=main
day-is-bigger-than   : 15       2        1    func       (day-is-bigger-than string string) : frame=main
day-is-smaller-than  : 16       2        1    func       (day-is-smaller-than string string) : frame=main
map                  : 17       2        1    class      map                 
type#map             : 18       2        2    atom       type#map            
size-of              : 19       2        1    funcList   {} : frame=null, type=list
                                         2    func       (size-of list) : frame=system
                                         2    func       (size-of array) : frame=system
                                         2    func       (size-of array int) : frame=system
                                         1    func       (size-of type#map) : frame=main
                                         1    func       (size-of type#queue) : frame=main
                                         1    func       (size-of type#set) : frame=main
                                         1    func       (size-of type#stack) : frame=main
clear                : 20       2        1    funcList   {} : frame=null, type=list
                                         1    func       (clear type#map) : frame=main
                                         1    func       (clear type#queue) : frame=main
                                         1    func       (clear type#set) : frame=main
                                         1    func       (clear type#stack) : frame=main
queue                : 21       2        1    class      queue               
type#queue           : 22       2        2    atom       type#queue          
get                  : 23       2        1    funcList   {} : frame=null, type=list
                                         2    func       (get list int) : frame=system
                                         2    func       (get array int) : frame=system
                                         2    func       (get array int int) : frame=system
                                         1    func       (get type#queue int) : frame=main
to-list              : 24       2        1    funcList   {} : frame=null, type=list
                                         2    func       (to-list list) : frame=system
                                         2    func       (to-list array) : frame=system
                                         2    func       (to-list iterator) : frame=system
                                         1    func       (to-list type#queue) : frame=main
                                         1    func       (to-list type#set) : frame=main
                                         1    func       (to-list type#stack) : frame=main
set                  : 25       2        1    class      set                 
type#set             : 26       2        2    atom       type#set            
stack                : 27       2        1    class      stack               
type#stack           : 28       2        2    atom       type#stack          
==========================================================================================================================


System var list: total=14
==========================================================================================================================
Var                  : Value
--------------------------------------------------------------------------------------------------------------------------
?file.separator      : "/"
?load-class          : '()
?load-jar            : '()
?load-script         : '("lang/load/tool.rulp" "lang/load/map.rulp" "lang/load/queue.rulp" "lang/load/set.rulp" "lang/load/stack.rulp")
?load-system         : '()
?loader-list         : '("_$xr_map_loader$_" "_$xr_queue_loader$_" "_$xr_set_loader$_")
?os.name             : ""
?os.version          : ""
?path                : '()
?path.separator      : ":"
?trace               : false
?user.dir            : ""
?user.home           : ""
?user.name           : ""
==========================================================================================================================

Global frame tree:

->FRAME(root): id=0, lvl=0, subject=root
    ->FRAME(system): id=1, lvl=1, subject=system
        ->FRAME(main): id=2, lvl=2, subject=main

Global Subject list:

name=map, string=map, lvl=0, ref=1/3, parent=null, final=true, mbrs=19, frame=null
==========================================================================================================================
Name                           : Access  Final Static Inherit Prop Ref  Type       Value
--------------------------------------------------------------------------------------------------------------------------
?impl                          : private                      0    1    var        atom, nil
_map_clear                     : private                      0    1    factor     _map_clear
_map_get                       : private                      0    1    factor     _map_get
_map_has_key                   : private                      0    1    factor     _map_has_key
_map_init                      : private                      0    1    factor     _map_init
_map_is_empty                  : private                      0    1    factor     _map_is_empty
_map_key_list                  : private                      0    1    factor     _map_key_list
_map_put                       : private                      0    1    factor     _map_put
_map_size_of                   : private                      0    1    factor     _map_size_of
_map_value_list                : private                      0    1    factor     _map_value_list
clear                          : default Y                    1    1    func       (clear) : frame=main
get                            : default Y                    1    1    func       (get nil) : frame=main
has-key                        : default Y                    1    1    func       (has-key nil) : frame=main
init                           : default Y                    1    1    func       (init) : frame=main
is-empty                       : default Y                    1    1    func       (is-empty) : frame=main
key-list                       : default Y                    1    1    func       (key-list) : frame=main
put                            : default Y                    1    1    func       (put nil nil) : frame=main
size-of                        : default Y                    1    1    func       (size-of) : frame=main
value-list                     : default Y                    1    1    func       (value-list) : frame=main
==========================================================================================================================

name=queue, string=queue, lvl=0, ref=1/3, parent=null, final=true, mbrs=28, frame=null
==========================================================================================================================
Name                           : Access  Final Static Inherit Prop Ref  Type       Value
--------------------------------------------------------------------------------------------------------------------------
?impl                          : private                      0    1    var        atom, nil
_queue_clear                   : private                      0    1    factor     _queue_clear
_queue_get                     : private                      0    1    factor     _queue_get
_queue_init                    : private                      0    1    factor     _queue_init
_queue_is_empty                : private                      0    1    factor     _queue_is_empty
_queue_peek_back               : private                      0    1    factor     _queue_peek_back
_queue_peek_front              : private                      0    1    factor     _queue_peek_front
_queue_pop_back                : private                      0    1    factor     _queue_pop_back
_queue_pop_front               : private                      0    1    factor     _queue_pop_front
_queue_push_back               : private                      0    1    factor     _queue_push_back
_queue_push_front              : private                      0    1    factor     _queue_push_front
_queue_size_of                 : private                      0    1    factor     _queue_size_of
_queue_to_list                 : private                      0    1    factor     _queue_to_list
clear                          : default Y                    1    1    func       (clear) : frame=main
get                            : default Y                    1    1    func       (get nil) : frame=main
init                           : default Y                    1    1    func       (init) : frame=main
is-empty                       : default Y                    1    1    func       (is-empty) : frame=main
peek                           : default Y                    1    1    func       (peek) : frame=main
peek_back                      : default Y                    1    1    func       (peek_back) : frame=main
peek_front                     : default Y                    1    1    func       (peek_front) : frame=main
pop                            : default Y                    1    1    func       (pop) : frame=main
pop_back                       : default Y                    1    1    func       (pop_back) : frame=main
pop_front                      : default Y                    1    1    func       (pop_front) : frame=main
push                           : default Y                    1    1    func       (push nil) : frame=main
push_back                      : default Y                    1    1    func       (push_back nil) : frame=main
push_front                     : default Y                    1    1    func       (push_front nil) : frame=main
size-of                        : default Y                    1    1    func       (size-of) : frame=main
to-list                        : default Y                    1    1    func       (to-list) : frame=main
==========================================================================================================================

name=set, string=set, lvl=0, ref=1/3, parent=null, final=true, mbrs=15, frame=null
==========================================================================================================================
Name                           : Access  Final Static Inherit Prop Ref  Type       Value
--------------------------------------------------------------------------------------------------------------------------
?impl                          : private                      0    1    var        atom, nil
_set_add                       : private                      0    1    factor     _set_add
_set_clear                     : private                      0    1    factor     _set_clear
_set_has                       : private                      0    1    factor     _set_has
_set_init                      : private                      0    1    factor     _set_init
_set_is_empty                  : private                      0    1    factor     _set_is_empty
_set_size_of                   : private                      0    1    factor     _set_size_of
_set_to_list                   : private                      0    1    factor     _set_to_list
add                            : default Y                    1    1    func       (add nil) : frame=main
clear                          : default Y                    1    1    func       (clear) : frame=main
has                            : default Y                    1    1    func       (has nil) : frame=main
init                           : default Y                    1    1    func       (init) : frame=main
is-empty                       : default Y                    1    1    func       (is-empty) : frame=main
size-of                        : default Y                    1    1    func       (size-of) : frame=main
to-list                        : default Y                    1    1    func       (to-list) : frame=main
==========================================================================================================================

name=stack, string=stack, lvl=0, ref=1/3, parent=null, final=true, mbrs=9, frame=null
==========================================================================================================================
Name                           : Access  Final Static Inherit Prop Ref  Type       Value
--------------------------------------------------------------------------------------------------------------------------
?impl                          : private                      0    1    var        atom, nil
clear                          : default Y                    1    1    func       (clear) : frame=main
init                           : default Y                    1    1    func       (init) : frame=main
is-empty                       : default Y                    1    1    func       (is-empty) : frame=main
peek                           : default Y                    1    1    func       (peek) : frame=main
pop                            : default Y                    1    1    func       (pop) : frame=main
push                           : default Y                    1    1    func       (push nil) : frame=main
size-of                        : default Y                    1    1    func       (size-of) : frame=main
to-list                        : default Y                    1    1    func       (to-list) : frame=main
==========================================================================================================================



************** Global Info: **************

Expression compute count:
==========================================================================================================================
     RType:    Count
--------------------------------------------------------------------------------------------------------------------------
    factor:    13466
      func:     1077
==========================================================================================================================

Object create count:
==========================================================================================================================
       RType:       Create       Delete        Exist
--------------------------------------------------------------------------------------------------------------------------
        atom:          884          884            0
      string:          572          572            0
        list:          678          678            0
        expr:         4706         4706            0
         var:         2601         2601            0
      factor:           28           28            0
        func:          132          132            0
    template:            1            1            0
       macro:            4            4            0
       class:            6            6            0
      member:         2820         2820            0
       frame:         1350         1350            0
 interpreter:            1            0
  frameEntry:         2694            0
      lambda:            0            0
==========================================================================================================================


