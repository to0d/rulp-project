************ Interpreter Info: ************

Total runtime info:
==========================================================================================================================
                          Name:     info
--------------------------------------------------------------------------------------------------------------------------
           Interpreter call id:      250
    Interpreter call level/max:        0       10
               Frame max level:        6
                  Frame max id:       11
           Frame free id count:        4
==========================================================================================================================

Optimize info:
==========================================================================================================================
      Name: Status
--------------------------------------------------------------------------------------------------------------------------
       LCO: rebuild=0, arg=0, pass=0, hit=0
==========================================================================================================================

Callable stats info: callId=250, row=29, column=63(4), value-max=20, value-unit=2^x
==========================================================================================================================
   Frame    RType  Count  Ref Object                         333333333333333333333333333333333333333333333333334433333336567 max=43, unit=2^x
--------------------------------------------------------------------------------------------------------------------------
    root   factor    178    0 add-attribute                    333333333333333333333333333333333333333333332                
    root   factor     58    0 defun                                                                        23331 23333335 1 
    root   factor     27    0 return                                                                                     246
    root   factor      8    0 defvar                                                                           32        111
    root   factor      7    0 alias                          33                                                             
    root   factor      6    0 print                                                                                       33
    root   factor      5    0 make-list                                                                        32           
    root   factor      4    0 defmacro                                                                          22          
    root   factor      4    0 cmp_def                                                                                      3
    main     func      4    1 cmp_class1                                                                                   3
  system     func      4    1 cmp                                                                                          3
    root   factor      3    0 setq                                                                                       21 
    root   factor      3    0 new                                                                                        21 
    root   factor      3    0 deftemplate                                                                               3   
    root   factor      3    0 add-list-to-array                                                                          21 
  system funcList      3    1 add                                                                                        21 
    main     func      2    1 to-string                                                                                   11
    main funcList      2    1 print-list                                                                                  11
    root   factor      2    0 loop                                                                                        11
    root   factor      1    0 to-string                                                                                    1
  system funcList      1    1 to-list                                                                                     1 
    root   factor      1    0 sort-list                                                                                    1
    main funcList      1    1 sort                                                                                         1
    root   factor      1    0 make-array                                                                                 1  
    root   factor      1    0 load                                                                                      1   
    main     func      1    1 init                                                                                        1 
    main     func      1    1 get                                                                                          1
    root   factor      1    0 defclass                                                                                   1  
    root   factor      1    0 add-array-to-list                                                                           1 
==========================================================================================================================

Global frame list: total=4

id=2, name=main, lvl=2, ref=2/3, entry=24, pid=1(system), subject=main
==========================================================================================================================
Name(alias)          : EntryId  FrameId  Ref  Type       Value               
--------------------------------------------------------------------------------------------------------------------------
root                 : 1        2        0    frame      root                
system               : 2        2        0    frame      system              
main                 : 3        2        2    frame      main                
?script-path         : 4        2        1    var        string, "data/rulp_script_collection/test_sort_3_cmp_func_1.rulp"
?path                : 5        2        1    var        list, '("load")     
is-empty             : 6        2        1    funcList   {} : frame=null, type=list
                                         2    func       (is-empty list) : frame=system
                                         2    func       (is-empty array) : frame=system
                                         1    func       (is-empty string) : frame=main
is-blank             : 7        2        1    func       (is-blank string) : frame=main
file-prename         : 8        2        1    func       (file-prename string) : frame=main
file-subffix         : 9        2        1    func       (file-subffix string) : frame=main
str-split-line       : 10       2        1    func       (str-split-line string) : frame=main
to-one-line          : 11       2        1    func       (to-one-line list) : frame=main
sort                 : 12       2        1    funcList   {} : frame=null, type=list
                                         1    func       (sort list) : frame=main
                                         1    func       (sort list func) : frame=main
                                         1    func       (sort array) : frame=main
                                         1    func       (sort array func) : frame=main
print-list           : 13       2        1    funcList   {} : frame=null, type=list
                                         1    func       (print-list list) : frame=main
                                         1    func       (print-list nil nil) : frame=main
                                         1    func       (print-list nil) : frame=main
to-valid-path        : 14       2        1    func       (to-valid-path string) : frame=main
day-is-bigger-than   : 15       2        1    func       (day-is-bigger-than string string) : frame=main
day-is-smaller-than  : 16       2        1    func       (day-is-smaller-than string string) : frame=main
class1               : 17       2        4    class      class1              
type#class1          : 18       2        2    atom       type#class1         
?arr                 : 19       2        1    var        array, {class1@un0,class1@un1,class1@un2}
                     : 22       2        4    instance   class1@un2          
?rv                  : 25       2        1    var        list, '(class1@un2 class1@un0 class1@un1)
?list                : 34       2        1    var        list, '(class1@un0 class1@un1 class1@un2)
cmp_class1           : 38       2        1    func       (cmp_class1 type#class1 type#class1) : frame=main
?list2               : 39       2        1    var        list, '(class1@un2 class1@un0 class1@un1)
==========================================================================================================================


id=3, name=SF-class1-0, lvl=3, ref=4/4, entry=0, pid=2(main), subject=class1

id=4, name=SF-un0-1, lvl=4, ref=4/5, entry=0, pid=3(SF-class1-0), subject=un0

id=5, name=SF-un1-2, lvl=4, ref=4/5, entry=0, pid=3(SF-class1-0), subject=un1

id=6, name=SF-un2-3, lvl=4, ref=4/5, entry=0, pid=3(SF-class1-0), subject=un2

System var list: total=14
==========================================================================================================================
Var                  : Value
--------------------------------------------------------------------------------------------------------------------------
?file.separator      : "/"
?load-class          : '()
?load-jar            : '()
?load-script         : '("lang/load/tool.rulp")
?load-system         : '()
?loader-list         : '()
?os.name             : ""
?os.version          : ""
?path                : '()
?path.separator      : ":"
?trace               : false
?user.dir            : ""
?user.home           : ""
?user.name           : ""
==========================================================================================================================

Global frame tree:

->FRAME(root): id=0, lvl=0, subject=root
    ->FRAME(system): id=1, lvl=1, subject=system
        ->FRAME(main): id=2, lvl=2, subject=main
            ->FRAME(SF-class1-0): id=3, lvl=3, subject=class1
                ->FRAME(SF-un0-1): id=4, lvl=4, subject=un0
                ->FRAME(SF-un1-2): id=5, lvl=4, subject=un1
                ->FRAME(SF-un2-3): id=6, lvl=4, subject=un2

Global Subject list:

name=class1, string=class1, lvl=0, ref=4/4, parent=null, final=false, mbrs=4, frame=3(SF-class1-0)
==========================================================================================================================
Name                           : Access  Final Static Inherit Prop Ref  Type       Value
--------------------------------------------------------------------------------------------------------------------------
?m_value                       : default                      0    1    var        atom, nil
get                            : default                      0    4    func       (get) : frame=main
init                           : default                      0    4    func       (init nil) : frame=main
to-string                      : default                      0    4    func       (to-string) : frame=main
==========================================================================================================================

name=un2, string=class1@un2, lvl=1, ref=4/6, parent=class1, final=false, mbrs=6, frame=6(SF-un2-3)
==========================================================================================================================
Name                           : Access  Final Static Inherit Prop Ref  Type       Value
--------------------------------------------------------------------------------------------------------------------------
?m_value                       : default              Y       4    1    var        string, "a"
?rv                            : default                      0    1    var        string, "a"
get                            : default              Y       4    1    func       (get) : frame=SF-un2-3, type=lambda
init                           : default              Y       4    1    func       (init nil) : frame=SF-un2-3, type=lambda
this                           : default                      0    4    instance   class1@un2
to-string                      : default              Y       4    1    func       (to-string) : frame=SF-un2-3, type=lambda
==========================================================================================================================



************** Global Info: **************

Expression compute count:
==========================================================================================================================
     RType:    Count
--------------------------------------------------------------------------------------------------------------------------
    factor:      317
      func:       32
==========================================================================================================================

Object create count:
==========================================================================================================================
       RType:       Create       Delete        Exist
--------------------------------------------------------------------------------------------------------------------------
        atom:          506          506            0
      string:           29           29            0
        list:           23           23            0
        expr:          785          785            0
       array:            1            1            0
         var:          197          197            0
        func:           86           86            0
    template:            1            1            0
       macro:            4            4            0
    instance:            3            3            0
       class:            3            3            0
      member:          334          334            0
       frame:           48           48            0
 interpreter:            1            0
  frameEntry:          303            0
      lambda:            9            0
==========================================================================================================================


